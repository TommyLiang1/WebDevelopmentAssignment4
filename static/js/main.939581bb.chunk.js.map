{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userProfile","userName","memberSince","LogIn","handleChange","e","target","value","setState","username","handleSubmit","preventDefault","mockLogIn","state","redirect","info","all_users","currentUser","onSubmit","type","name","defaultValue","onChange","Credits","creditView","listofCredits","creditsArray","map","item","style","listStylePosition","description","amount","date","slice","addCredit","event","addCredits","currentDate","Date","Month","getUTCMonth","Day","getUTCDate","Time","getUTCFullYear","prevState","Number","toFixed","step","Debits","debitView","listofDebits","debitsArray","eachDebit","addDebit","addDebits","getDate","App","logInInfo","bool","i","length","shallowState","push","shallowStateUsers","a","debitAPI","axios","get","credit","debit","data","console","log","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.939581bb.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits </Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userProfile.userName}</div>\n        <div>Member Since: {this.props.userProfile.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state =  {username : this.props.info.all_users[this.props.info.currentUser].userName}\n    // this.props.info\n      // redirect: false  // Redirect property used to trigger Redirect\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const userName = e.target.value \n    this.setState({username: userName})\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.username)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.state.username} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Credits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountBalance: 0,\n      creditsArray: [],\n    };\n  }\n\n  creditView = () => {\n    const listofCredits = this.props.creditsArray.map((item) =>\n      <li style={{listStylePosition: \"inside\"}} key={item.description}>{item.description}, ${item.amount}, {item.date.slice(0,10)}</li>\n    )\n    return (\n      <ul>{listofCredits}</ul>\n    )\n  }\n\n  addCredit = (event) => {\n    event.preventDefault();\n    // call function in App.js\n    this.props.addCredits(event);\n\n    //setting time\n    var currentDate = new Date();\n    var Month = currentDate.getUTCMonth() + 1;\n    var Day = currentDate.getUTCDate();\n    var Year = currentDate.getUTCFullYear();\n    var Time = Year + '-' + Month + '-' + Day;\n\n    // if description and amount boxes are empty there is nothing to add so return\n    if (event.target.description.value === \"\" || event.target.amount.value === \"\"){\n      return;\n    }\n    else{\n      this.setState((prevState) => ({ \n        // states the balance to the nearest 2 digits\n        accountBalance: (Number(this.state.accountBalance) + Number(event.target.amount.value)).toFixed(2),\n        // add credit to creditsArray alongside with the exist logs\n        creditsArray: [...prevState.creditsArray, {amount: event.target.amount.value, description: event.target.description.value, date: Time}],\n      }))\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Credits</h1>\n        {this.creditView()}\n        <h2>Balance: {this.props.accountBalance}</h2>\n        <form onSubmit={this.addCredit}>\n          <label>\n            Description:\n            <input type=\"text\" name=\"description\" />\n          </label>\n          <label>\n            Amount:\n            <input type=\"number\" step=\".01\" name=\"amount\" />\n          </label>\n          <button type=\"submit\">Add Credit</button>\n        </form>\n        <Link to=\"/\">Return to Home</Link>\n        <br /><br />\n        <Link to=\"/debits\">Debits</Link>\n      </div>\n    );\n  }\n}\n\nexport default Credits;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nclass Debits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountBalance: 0,\n      debitsArray: [],\n    };\n  }\n\n  //Creating the list of debits. \n  debitView = () => {\n    const listofDebits = this.props.debitsArray.map((eachDebit) => \n      <li style={{listStylePosition: \"inside\"}} key={eachDebit.description}>{eachDebit.description}, ${eachDebit.amount}, {eachDebit.date.slice(0,10)}</li>\n    ) \n    return (\n      <ul>{listofDebits}</ul>\n    )\n  }\n\n  //Function to add a new debit including the description, cost, and time.\n  addDebit = (event) => {\n    //preventing default stops page from reloading everytime something is added\n    event.preventDefault();\n    this.props.addDebits(event);\n\n    //setting time\n    var currentDate = new Date();\n    var Month = currentDate.getUTCMonth() + 1;\n    var Day = currentDate.getUTCDate();\n    var Year = currentDate.getUTCFullYear();\n    var Time = Year + '-' + Month + '-' + Day;\n\n    // if description and amount boxes are empty there is nothing to add so return\n    if (event.target.description.value === \"\" || event.target.amount.value === \"\"){\n      return;\n    }\n    else{\n      this.setState((prevState) => ({ \n        // states the balance to the nearest 2 digits\n        accountBalance: (this.state.accountBalance - event.target.amount.value).toFixed(2), \n        // triple dot copies the contents of the debitArray\n        debitsArray: [...prevState.debitsArray, {amount: event.target.amount.value, description: event.target.description.value, date: Time}],\n      }))\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n      <h1>Debits</h1>\n      {this.debitView()}\n      <h2>Balance: {this.props.accountBalance}</h2>\n      <form onSubmit={this.addDebit}>\n      <label>Description: \n        <input type=\"text\" name=\"description\" />\n        </label>\n        <label> Amount:\n        <input type=\"number\" step=\"0.01\" name=\"amount\" />\n        </label>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <Link to=\"/\">Return to Home</Link>\n      <br /><br />\n      <Link to=\"/credits\">Credits</Link>\n    </div>\n    );\n  }\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n//importing axios to read the data from the heroku api page\nimport axios from 'axios';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\n//globally calling time once instead of calling it twice for both debit and credit\nvar currentDate = new Date();\nvar Month = currentDate.getUTCMonth() + 1;\nvar Day = currentDate.getDate();\nvar Year = currentDate.getUTCFullYear();\nvar Time =  Month + '/' + Day  +  '/' + Year ;\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super();\n    this.state = {\n      currentUser:0,//first num will be index of current user\n      all_users: [\n        {userName: 'Joe Smith',\n        memberSince: '11/22/99',\n        accountBalance: 0,\n        creditsArray: [],\n        debitsArray: []}\n      ]} //making each user have their own array so they have their own balance\n  }\n\n  //checks heroku for both debit and credit (Populates the pages with the preexisting items purchased)\n  async componentDidMount() {\n    // setting the API link to a variable\n    let creditAPI = 'https://moj-api.herokuapp.com/credits'\n    let debitAPI = 'https://moj-api.herokuapp.com/debits';\n\n    //setting a variable to the API response to the link\n    let credit = await axios.get(creditAPI);\n    let debit = await axios.get(debitAPI);\n\n    //sets the array of items on the linked page to the data\n    this.setState({\n      currentUser:0,//first num will be index of current user\n      all_users: [\n        {userName: 'Joe Smith',\n        memberSince: '11/22/1999',\n        accountBalance: 1234567.89,\n        creditsArray: credit.data,\n        debitsArray: debit.data}\n      ]});\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    // const newUser = { ...this.state.currentUser }\n    // newUser.userName = logInInfo.userName\n    const userName = logInInfo\n    let bool = false;\n    for(let i =0; i < this.state.all_users.length ; i++){\n      if(userName === this.state.all_users[i].userName){ //if this user already exists \n        bool = true\n        this.setState({currentUser : i})\n      }\n    }\n    if(!bool){ //if its a new user\n      var currentDate = new Date();\n      var Month = currentDate.getUTCMonth() + 1;\n      var Day = currentDate.getDate();\n      var Year = currentDate.getUTCFullYear();\n      var Time =  Month + '/' + Day  +  '/' + Year ;\n\n      let shallowState = this.state.all_users\n      shallowState.push({\n        userName: userName,\n        memberSince: Time,\n        accountBalance: 0,\n        creditsArray: [],\n        debitsArray: []\n      })\n      this.setState( {all_users : shallowState})\n      this.setState({currentUser : shallowState.length -1})\n    }\n\n  }\n  //HERE ...prevState.creditsArray, { amount: event.target.amount.value, description: event.target.description.value, date: Time }\n  // helper function alongside addDebit in Debits.js to add Debits\n  addDebits = (event) => {\n\n    // if empty there is nothing to add so return aka dont do anything\n    if (event.target.description.value === \"\" || event.target.amount.value === \"\") {\n      return;\n    }\n    let shallowStateUsers = this.state.all_users\n    let currentUser =  shallowStateUsers[this.state.currentUser]\n    currentUser.accountBalance = (Number(currentUser.accountBalance) - Number(event.target.amount.value)).toFixed(2)\n    currentUser.debitsArray.push({ amount: event.target.amount.value, description: event.target.description.value, date: Time })\n    shallowStateUsers[this.state.currentUser] = currentUser\n    \n    this.setState({all_users : shallowStateUsers}) \n  }\n\n  addCredits = (event) => {\n    // if empty, don't do anything and return\n    if (event.target.description.value === \"\" || event.target.amount.value === \"\") {\n      return;\n    }\n    let shallowStateUsers = this.state.all_users\n    let currentUser =  shallowStateUsers[this.state.currentUser]\n    currentUser.accountBalance = (Number(currentUser.accountBalance) + Number(event.target.amount.value)).toFixed(2)\n    currentUser.creditsArray.push({ amount: event.target.amount.value, description: event.target.description.value, date: Time })\n    shallowStateUsers[this.state.currentUser] = currentUser\n    this.setState({all_users : shallowStateUsers}) \n  }\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.all_users[this.state.currentUser].accountBalance} />);\n    const UserProfileComponent = () => (\n       //this.state.all_users[this.state.currentUser].userName\n      <UserProfile userProfile={this.state.all_users[this.state.currentUser]} memberSince={this.state.currentUser.memberSince} />\n    );\n    console.log(this.state.all_users)\n    // const LogInComponent = () => (<LogIn user={this.state.all_users[this.state.currentUser]} mockLogIn={this.mockLogIn} />)\n    const LogInComponent = () => (<LogIn info={this.state} mockLogIn={this.mockLogIn} />)\n    // Debit component will state the account balance on the page alongside being able to add debit and display the array\n    const DebitsComponent = () => (<Debits accountBalance={this.state.all_users[this.state.currentUser].accountBalance} debitsArray={this.state.all_users[this.state.currentUser].debitsArray} addDebits={this.addDebits} />);\n\n    // Credit component will state the account balance on the page alongside being able to add ceredit and display the array\n    const CreditsComponent = () => (<Credits accountBalance={this.state.all_users[this.state.currentUser].accountBalance} creditsArray={this.state.all_users[this.state.currentUser].creditsArray} addCredits={this.addCredits} />);\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/WebDevelopmentAssignment4\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent} />\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n          <Route exact path=\"/login\" render={LogInComponent} />\n          <Route exact path=\"/credits\" render={CreditsComponent} />\n          <Route exact path=\"/debits\" render={DebitsComponent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}